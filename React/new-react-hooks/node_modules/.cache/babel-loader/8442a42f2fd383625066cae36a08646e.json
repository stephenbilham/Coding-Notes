{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst noteReducer = (state, action) => {\n  switch (action.type) {\n    case \"POPULATE_NOTES\":\n      return action.notes;\n\n    case \"ADD_NOTE\":\n      return [...state, {\n        title: action.title,\n        description: action.description\n      }];\n\n    case \"REMOVE_NOTE\":\n      return action.y;\n\n    default:\n      return state;\n  }\n};\n\nconst AppNotes = () => {\n  // const [notes, setNotes] = useState([]);\n  const [notes, dispatch] = useReducer(noteReducer, []);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault(); // setNotes([...notes, { title, description }]);\n\n    dispatch({\n      type: \"ADD_NOTE\"\n    });\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    // setNotes(notes.filter(note => note.title !== title));\n    dispatch({\n      type: \"REMOVE_NOTE\"\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"this should only be run once\");\n    const notesData = JSON.parse(localStorage.getItem(\"notez\"));\n\n    if (notesData) {\n      dispatch({\n        type: \"POPULATE_NOTES\",\n        notes: notesData\n      }); // setNotes(notesData);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"notez\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"notes\"), notes.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.title,\n    note: note,\n    removeNote: removeNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Add info\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"add note\")));\n};\n\nconst Note = ({\n  note,\n  removeNote\n}) => {\n  useEffect(() => {\n    console.log(\"setting up effect\");\n    return () => {\n      console.log(\"cleaning up\");\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: note.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, note.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, note.description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeNote(note.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"x\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(AppNotes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js"],"names":["React","useState","useEffect","useReducer","ReactDOM","serviceWorker","noteReducer","state","action","type","notes","title","description","y","AppNotes","dispatch","setTitle","setDescription","addNote","e","preventDefault","removeNote","console","log","notesData","JSON","parse","localStorage","getItem","setItem","stringify","map","note","target","value","Note","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst noteReducer = (state, action) => {\n  switch (action.type) {\n    case \"POPULATE_NOTES\":\n      return action.notes;\n    case \"ADD_NOTE\":\n      return [\n        ...state,\n        {\n          title: action.title,\n          description: action.description\n        }\n      ];\n    case \"REMOVE_NOTE\":\n      return action.y;\n    default:\n      return state;\n  }\n};\n\nconst AppNotes = () => {\n  // const [notes, setNotes] = useState([]);\n  const [notes, dispatch] = useReducer(noteReducer, []);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault();\n    // setNotes([...notes, { title, description }]);\n    dispatch({\n      type: \"ADD_NOTE\"\n    });\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    // setNotes(notes.filter(note => note.title !== title));\n    dispatch({\n      type: \"REMOVE_NOTE\"\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"this should only be run once\");\n    const notesData = JSON.parse(localStorage.getItem(\"notez\"));\n    if (notesData) {\n      dispatch({\n        type: \"POPULATE_NOTES\",\n        notes: notesData\n      });\n      // setNotes(notesData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"notez\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div>\n      <h1>notes</h1>\n      {notes.map(note => (\n        <Note key={note.title} note={note} removeNote={removeNote} />\n      ))}\n      <form onSubmit={addNote}>\n        <input value={title} onChange={e => setTitle(e.target.value)} />\n        <textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        >\n          Add info\n        </textarea>\n\n        <button>add note</button>\n      </form>\n    </div>\n  );\n};\n\nconst Note = ({ note, removeNote }) => {\n  useEffect(() => {\n    console.log(\"setting up effect\");\n    return () => {\n      console.log(\"cleaning up\");\n    };\n  }, []);\n\n  return (\n    <div key={note.title}>\n      <h3>{note.title}</h3>\n      <p>{note.description}</p>\n      <button onClick={() => removeNote(note.title)}>x</button>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppNotes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}