{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst AppNotes = () => {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault();\n    setNotes([...notes, {\n      title,\n      description\n    }]);\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    setNotes(notes.filter(note => note.title !== title));\n  };\n\n  useEffect = () => {\n    document.title = title;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"notes\"), notes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    key: note.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, note.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, note.description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeNote(note.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"x\"))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Add info\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"add note\")));\n}; // const App = props => {\n//   const [count, setCount] = useState(props.count);\n//   const [text, setText] = useState(\"\");\n//   return (\n//     <div>\n//       <p>\n//         hello the current {text || count} is {count}\n//       </p>\n//       <button onClick={() => setCount(count + 1)}> add one</button>\n//       <button onClick={() => setCount(count - 1)}>remove one </button>\n//       <button onClick={() => setCount(0)}>Back to 0</button>\n//       <input\n//         value={text}\n//         onChange={e => {\n//           setText(e.target.value);\n//         }}\n//       />\n//     </div>\n//   );\n// };\n// App.defaultProps = {\n//   count: 0\n// };\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(AppNotes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js"],"names":["React","useState","useEffect","ReactDOM","serviceWorker","AppNotes","notes","setNotes","title","setTitle","description","setDescription","addNote","e","preventDefault","removeNote","filter","note","document","map","target","value","render","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMW,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEE,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAX,CAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAJD;;AAMA,QAAMM,UAAU,GAAGP,KAAK,IAAI;AAC1BD,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,KAAL,KAAeA,KAApC,CAAD,CAAR;AACD,GAFD;;AAIAN,EAAAA,SAAS,GAAG,MAAM;AAChBgB,IAAAA,QAAQ,CAACV,KAAT,GAAiBA,KAAjB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGF,KAAK,CAACa,GAAN,CAAUF,IAAI,iBACb;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACT,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,IAAI,CAACT,KAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIS,IAAI,CAACP,WAAT,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMK,UAAU,CAACE,IAAI,CAACT,KAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADD,CAFH,eASE;AAAM,IAAA,QAAQ,EAAEI,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEJ,KAAd;AAAqB,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,KAAK,EAAEX,WADT;AAEE,IAAA,QAAQ,EAAEG,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CATF,CADF;AAuBD,CA1CD,C,CA2CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAlB,QAAQ,CAACmB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEJ,QAAQ,CAACK,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst AppNotes = () => {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault();\n    setNotes([...notes, { title, description }]);\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    setNotes(notes.filter(note => note.title !== title));\n  };\n\n  useEffect = () => {\n    document.title = title;\n  };\n\n  return (\n    <div>\n      <h1>notes</h1>\n      {notes.map(note => (\n        <div key={note.title}>\n          <h3>{note.title}</h3>\n          <p>{note.description}</p>\n          <button onClick={() => removeNote(note.title)}>x</button>\n        </div>\n      ))}\n      <form onSubmit={addNote}>\n        <input value={title} onChange={e => setTitle(e.target.value)} />\n        <textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        >\n          Add info\n        </textarea>\n\n        <button>add note</button>\n      </form>\n    </div>\n  );\n};\n// const App = props => {\n//   const [count, setCount] = useState(props.count);\n//   const [text, setText] = useState(\"\");\n\n//   return (\n//     <div>\n//       <p>\n//         hello the current {text || count} is {count}\n//       </p>\n//       <button onClick={() => setCount(count + 1)}> add one</button>\n//       <button onClick={() => setCount(count - 1)}>remove one </button>\n//       <button onClick={() => setCount(0)}>Back to 0</button>\n//       <input\n//         value={text}\n//         onChange={e => {\n//           setText(e.target.value);\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// App.defaultProps = {\n//   count: 0\n// };\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppNotes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}