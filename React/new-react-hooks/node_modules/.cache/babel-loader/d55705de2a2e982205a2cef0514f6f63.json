{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport noteReducer from \"./reducers/notes\";\n\nconst AppNotes = () => {\n  // const [notes, setNotes] = useState([]);\n  const [notes, dispatch] = useReducer(noteReducer, []);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault(); // setNotes([...notes, { title, description }]);\n\n    dispatch({\n      type: \"ADD_NOTE\",\n      title,\n      description\n    });\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    // setNotes(notes.filter(note => note.title !== title));\n    dispatch({\n      type: \"REMOVE_NOTE\",\n      title\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"this should only be run once\");\n    const notesData = JSON.parse(localStorage.getItem(\"notez\"));\n\n    if (notesData) {\n      dispatch({\n        type: \"POPULATE_NOTES\",\n        notes: notesData\n      }); // setNotes(notesData);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"notez\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"notes\"), notes.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.title,\n    note: note,\n    removeNote: removeNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Add info\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"add note\")));\n};\n\nconst Note = ({\n  note,\n  removeNote\n}) => {\n  useEffect(() => {\n    console.log(\"setting up effect\");\n    return () => {\n      console.log(\"cleaning up\");\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: note.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, note.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, note.description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeNote(note.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"x\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(AppNotes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js"],"names":["React","useState","useEffect","useReducer","ReactDOM","serviceWorker","noteReducer","AppNotes","notes","dispatch","title","setTitle","description","setDescription","addNote","e","preventDefault","type","removeNote","console","log","notesData","JSON","parse","localStorage","getItem","setItem","stringify","map","note","target","value","Note","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport noteReducer from \"./reducers/notes\";\n\nconst AppNotes = () => {\n  // const [notes, setNotes] = useState([]);\n  const [notes, dispatch] = useReducer(noteReducer, []);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault();\n    // setNotes([...notes, { title, description }]);\n    dispatch({\n      type: \"ADD_NOTE\",\n      title,\n      description\n    });\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    // setNotes(notes.filter(note => note.title !== title));\n    dispatch({\n      type: \"REMOVE_NOTE\",\n      title\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"this should only be run once\");\n    const notesData = JSON.parse(localStorage.getItem(\"notez\"));\n    if (notesData) {\n      dispatch({\n        type: \"POPULATE_NOTES\",\n        notes: notesData\n      });\n      // setNotes(notesData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"notez\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div>\n      <h1>notes</h1>\n      {notes.map(note => (\n        <Note key={note.title} note={note} removeNote={removeNote} />\n      ))}\n      <form onSubmit={addNote}>\n        <input value={title} onChange={e => setTitle(e.target.value)} />\n        <textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        >\n          Add info\n        </textarea>\n\n        <button>add note</button>\n      </form>\n    </div>\n  );\n};\n\nconst Note = ({ note, removeNote }) => {\n  useEffect(() => {\n    console.log(\"setting up effect\");\n    return () => {\n      console.log(\"cleaning up\");\n    };\n  }, []);\n\n  return (\n    <div key={note.title}>\n      <h3>{note.title}</h3>\n      <p>{note.description}</p>\n      <button onClick={() => removeNote(note.title)}>x</button>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppNotes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}