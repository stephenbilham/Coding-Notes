{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\"; // const AppNotes = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const addNote = e => {\n//     e.preventDefault();\n//     setNotes([...notes, { title, description }]);\n//     setTitle(\"\");\n//   };\n//   const removeNote = title => {\n//     setNotes(notes.filter(note => note.title !== title));\n//   };\n//   return (\n//     <div>\n//       <h1>notes</h1>\n//       {notes.map(note => (\n//         <div key={note.title}>\n//           <h3>{note.title}</h3>\n//           <p>{note.description}</p>\n//           <button onClick={() => removeNote(note.title)}>x</button>\n//         </div>\n//       ))}\n//       <form onSubmit={addNote}>\n//         <input value={title} onChange={e => setTitle(e.target.value)} />\n//         <textarea\n//           value={description}\n//           onChange={e => setDescription(e.target.value)}\n//         >\n//           Add info\n//         </textarea>\n//         <button>add note</button>\n//       </form>\n//     </div>\n//   );\n// };\n\nconst App = props => {\n  const [count, setCount] = useState(props.count);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    console.log(\"it ran\");\n    document.title = count;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"hello the current \", text || count, \" is \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \" add one\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"remove one \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Back to 0\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: text,\n    onChange: e => {\n      setText(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nApp.defaultProps = {\n  count: 0\n};\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/new-react-features/src/index.js"],"names":["React","useState","useEffect","ReactDOM","serviceWorker","App","props","count","setCount","text","setText","console","log","document","title","e","target","value","defaultProps","render","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,IAAAA,QAAQ,CAACC,KAAT,GAAiBP,KAAjB;AACD,GAHQ,CAAT;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqBE,IAAI,IAAIF,KAD7B,UACwCA,KADxC,CADF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AACE,IAAA,KAAK,EAAEC,IADT;AAEE,IAAA,QAAQ,EAAEM,CAAC,IAAI;AACbL,MAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAgBD,CAzBD;;AA2BAZ,GAAG,CAACa,YAAJ,GAAmB;AACjBX,EAAAA,KAAK,EAAE;AADU,CAAnB;AAIAJ,QAAQ,CAACgB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEN,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// const AppNotes = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n\n//   const addNote = e => {\n//     e.preventDefault();\n//     setNotes([...notes, { title, description }]);\n//     setTitle(\"\");\n//   };\n\n//   const removeNote = title => {\n//     setNotes(notes.filter(note => note.title !== title));\n//   };\n\n//   return (\n//     <div>\n//       <h1>notes</h1>\n//       {notes.map(note => (\n//         <div key={note.title}>\n//           <h3>{note.title}</h3>\n//           <p>{note.description}</p>\n//           <button onClick={() => removeNote(note.title)}>x</button>\n//         </div>\n//       ))}\n//       <form onSubmit={addNote}>\n//         <input value={title} onChange={e => setTitle(e.target.value)} />\n//         <textarea\n//           value={description}\n//           onChange={e => setDescription(e.target.value)}\n//         >\n//           Add info\n//         </textarea>\n\n//         <button>add note</button>\n//       </form>\n//     </div>\n//   );\n// };\n\nconst App = props => {\n  const [count, setCount] = useState(props.count);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"it ran\");\n    document.title = count;\n  });\n\n  return (\n    <div>\n      <p>\n        hello the current {text || count} is {count}\n      </p>\n      <button onClick={() => setCount(count + 1)}> add one</button>\n      <button onClick={() => setCount(count - 1)}>remove one </button>\n      <button onClick={() => setCount(0)}>Back to 0</button>\n      <input\n        value={text}\n        onChange={e => {\n          setText(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  count: 0\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}