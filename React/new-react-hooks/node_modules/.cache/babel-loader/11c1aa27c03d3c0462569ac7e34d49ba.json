{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/new-react-features/src/components/AppNotes.js\";\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport noteReducer from \"../reducers/notes\";\nimport NoteList from \"./NoteList\";\n\nconst AppNotes = () => {\n  // const [notes, setNotes] = useState([]);\n  const [notes, dispatch] = useReducer(noteReducer, []);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault(); // setNotes([...notes, { title, description }]);\n\n    dispatch({\n      type: \"ADD_NOTE\",\n      title,\n      description\n    });\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    // setNotes(notes.filter(note => note.title !== title));\n    dispatch({\n      type: \"REMOVE_NOTE\",\n      title\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"this should only be run once\");\n    const notesData = JSON.parse(localStorage.getItem(\"notez\"));\n\n    if (notesData) {\n      dispatch({\n        type: \"POPULATE_NOTES\",\n        notes: notesData\n      }); // setNotes(notesData);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"notez\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"notes\"), /*#__PURE__*/React.createElement(NoteList, {\n    notes: notes,\n    removeNote: removeNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Add info\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"add note\")));\n};\n\nexport { AppNotes as default };","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/new-react-features/src/components/AppNotes.js"],"names":["React","useState","useReducer","useEffect","noteReducer","NoteList","AppNotes","notes","dispatch","title","setTitle","description","setDescription","addNote","e","preventDefault","type","removeNote","console","log","notesData","JSON","parse","localStorage","getItem","setItem","stringify","target","value","default"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,UAAU,CAACE,WAAD,EAAc,EAAd,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF,GADmB,CAEnB;;AACAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,UADC;AAEPP,MAAAA,KAFO;AAGPE,MAAAA;AAHO,KAAD,CAAR;AAKAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAWA,QAAMO,UAAU,GAAGR,KAAK,IAAI;AAC1B;AACAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,aADC;AAEPP,MAAAA;AAFO,KAAD,CAAR;AAID,GAND;;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAlB;;AACA,QAAIJ,SAAJ,EAAe;AACbZ,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAE,gBADC;AAEPT,QAAAA,KAAK,EAAEa;AAFA,OAAD,CAAR,CADa,CAKb;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAenB,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAwB,IAAA,UAAU,EAAEU,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAM,IAAA,QAAQ,EAAEJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAEJ,KAAd;AAAqB,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,KAAK,EAAEjB,WADT;AAEE,IAAA,QAAQ,EAAEG,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAHF,CADF;AAiBD,CA1DD;;AA4DA,SAAStB,QAAQ,IAAIuB,OAArB","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\nimport noteReducer from \"../reducers/notes\";\nimport NoteList from \"./NoteList\";\n\nconst AppNotes = () => {\n  // const [notes, setNotes] = useState([]);\n  const [notes, dispatch] = useReducer(noteReducer, []);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const addNote = e => {\n    e.preventDefault();\n    // setNotes([...notes, { title, description }]);\n    dispatch({\n      type: \"ADD_NOTE\",\n      title,\n      description\n    });\n    setTitle(\"\");\n  };\n\n  const removeNote = title => {\n    // setNotes(notes.filter(note => note.title !== title));\n    dispatch({\n      type: \"REMOVE_NOTE\",\n      title\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"this should only be run once\");\n    const notesData = JSON.parse(localStorage.getItem(\"notez\"));\n    if (notesData) {\n      dispatch({\n        type: \"POPULATE_NOTES\",\n        notes: notesData\n      });\n      // setNotes(notesData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"notez\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div>\n      <h1>notes</h1>\n      <NoteList notes={notes} removeNote={removeNote} />\n      <form onSubmit={addNote}>\n        <input value={title} onChange={e => setTitle(e.target.value)} />\n        <textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        >\n          Add info\n        </textarea>\n\n        <button>add note</button>\n      </form>\n    </div>\n  );\n};\n\nexport { AppNotes as default };\n"]},"metadata":{},"sourceType":"module"}